{"remainingRequest":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProjectFiles\\Virtual_Project\\project\\src\\views\\Emulate.vue?vue&type=template&id=86aadbae&scoped=true&","dependencies":[{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\src\\views\\Emulate.vue","mtime":1651913075802},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648463936189},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1648463943212},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648463936189},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\vue-loader\\lib\\index.js","mtime":1648463943211}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}