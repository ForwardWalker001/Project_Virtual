{"remainingRequest":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProjectFiles\\Virtual_Project\\project\\src\\components\\charts.vue?vue&type=style&index=0&id=3eb08836&scoped=true&lang=css&","dependencies":[{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\src\\components\\charts.vue","mtime":1650687557822},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\css-loader\\dist\\cjs.js","mtime":1648463937260},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1648463943212},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\postcss-loader\\src\\index.js","mtime":1648463940342},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648463936189},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\vue-loader\\lib\\index.js","mtime":1648463943211}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNoYXJ0IHsNCiAgbWFyZ2luLXRvcDogMjBweDsNCiAgLyogZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7ICovDQp9DQoudGFibGVCb3ggew0KICB3aWR0aDogMzgxcHg7DQogIGZsb2F0OiBsZWZ0Ow0KICBtYXJnaW4tbGVmdDogMTIwcHg7DQogIG1hcmdpbi10b3A6IDgwcHg7DQp9DQouY2hhcnRDb250ZW50IHsNCiAgd2lkdGg6IDUwJTsNCiAgaGVpZ2h0OiA1MDBweDsNCiAgZmxvYXQ6IHJpZ2h0Ow0KICBtYXJnaW4tcmlnaHQ6IDgwcHg7DQp9DQo="},{"version":3,"sources":["charts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"charts.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"chart\">\r\n    <el-table :data=\"objData\" stripe border class=\"tableBox\">\r\n      <el-table-column prop=\"name\" label=\"分数区分\" width=\"200\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"value\" label=\"人数\" width=\"180\"> </el-table-column>\r\n      <!-- <el-table-column prop=\"address\" label=\"地址\"> </el-table-column> -->\r\n    </el-table>\r\n    <div ref=\"Chart\" class=\"chartContent\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  props: [\"chartData\"],\r\n  data() {\r\n    return {\r\n      chartInstance: null,\r\n      option: {},\r\n      objData: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.handleData();\r\n    this.initChart();\r\n    this.updateChart();\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  },\r\n  methods: {\r\n    // 处理数据，变成符合 比例图的数据\r\n    handleData() {\r\n      let scoreDate = [0, 0, 0, 0, 0, 0];\r\n      this.chartData.map((item) => {\r\n        let val = parseInt(item.score);\r\n        if (val >= 90) {\r\n          scoreDate[0]++;\r\n        } else if (val >= 80 && val < 90) {\r\n          scoreDate[1]++;\r\n        } else if (val >= 70 && val < 80) {\r\n          scoreDate[2]++;\r\n        } else if (val >= 60 && val < 70) {\r\n          scoreDate[3]++;\r\n        } else if (val > 0 && val < 60) {\r\n          scoreDate[4]++;\r\n        }\r\n      });\r\n      scoreDate[5] =\r\n        scoreDate[0] +\r\n        scoreDate[1] +\r\n        scoreDate[2] +\r\n        scoreDate[3] +\r\n        scoreDate[4];\r\n      this.objData = [\r\n        { value: scoreDate[0], name: \"90分及以上\" },\r\n        { value: scoreDate[1], name: \"89至80分\" },\r\n        { value: scoreDate[2], name: \"79至70分\" },\r\n        { value: scoreDate[3], name: \"69至60分\" },\r\n        { value: scoreDate[4], name: \"不及格\" },\r\n        { value: scoreDate[5], name: \"总人数\" },\r\n      ];\r\n    },\r\n    initChart() {\r\n      this.chartInstance = echarts.init(this.$refs.Chart);\r\n    },\r\n    updateChart() {\r\n      this.option = {\r\n        title: {\r\n          text: \"成绩比例图\",\r\n          left: \"center\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n        },\r\n        legend: {\r\n          orient: \"vertical\",\r\n          left: \"right\",\r\n          top: \"bottom\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Access From\",\r\n            type: \"pie\",\r\n            radius: \"50%\",\r\n\r\n            label: {\r\n              normal: {\r\n                color: \"auto\",\r\n                formatter: \"{b} ({d}%)\",\r\n                textStyle: {\r\n                  fontWeight: \"normal\",\r\n                  fontSize: 15,\r\n                },\r\n              },\r\n            },\r\n            data: this.objData.slice(0,5),\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      this.chartInstance.setOption(this.option);\r\n    },\r\n    // 当浏览器大小发生变化会调用该方法，完成屏幕适配\r\n    handleResize() {\r\n      this.chartInstance && this.chartInstance.resize();\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    this.chartInstance && this.chartInstance.dispose();\r\n    this.chartInstance = null;\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart {\r\n  margin-top: 20px;\r\n  /* display: flex;\r\n  justify-content: center; */\r\n}\r\n.tableBox {\r\n  width: 381px;\r\n  float: left;\r\n  margin-left: 120px;\r\n  margin-top: 80px;\r\n}\r\n.chartContent {\r\n  width: 50%;\r\n  height: 500px;\r\n  float: right;\r\n  margin-right: 80px;\r\n}\r\n</style>"]}]}