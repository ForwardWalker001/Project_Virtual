{"remainingRequest":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ProjectFiles\\Virtual_Project\\project\\src\\components\\LineChart.vue?vue&type=style&index=0&id=6760596c&scoped=true&lang=css&","dependencies":[{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\src\\components\\LineChart.vue","mtime":1651294940308},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\css-loader\\dist\\cjs.js","mtime":1648463937260},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1648463943212},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\postcss-loader\\src\\index.js","mtime":1648463940342},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648463936189},{"path":"D:\\ProjectFiles\\Virtual_Project\\project\\node_modules\\vue-loader\\lib\\index.js","mtime":1648463943211}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY2hhcnRDb250ZW50IHsNCiAgLyogbWFyZ2luLWxlZnQ6IDIwcHg7ICovDQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDI1MHB4Ow0KfQ0K"},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA","file":"LineChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"chart\">\r\n    <div ref=\"Chart\" class=\"chartContent\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  props: [\"chartData\"],\r\n  data() {\r\n    return {\r\n      chartInstance: null,\r\n      option: {},\r\n      objData: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    // this.initChart();\r\n    this.chartInstance = echarts.init(this.$refs.Chart);\r\n    this.updateChart();\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  },\r\n  watch: {\r\n    chartData: {\r\n      handler: function (val) {\r\n        this.option.series[0].data = val;\r\n        this.chartInstance.setOption(this.option);\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    // initChart() {\r\n    //   this.chartInstance = echarts.init(this.$refs.Chart);\r\n    // },\r\n    updateChart() {\r\n      this.option = {\r\n        title: {\r\n          text: \"转速变化\",\r\n          left: \"center\",\r\n        },\r\n        grid: {\r\n          top: 40,\r\n          bottom: 10,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          show: false,\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n        },\r\n        series: [\r\n          {\r\n            // data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n            data: this.chartData,\r\n            type: \"line\",\r\n            smooth: true,\r\n            symbol: 'circle',\r\n          },\r\n        ],\r\n      };\r\n      this.chartInstance.setOption(this.option);\r\n    },\r\n    // 当浏览器大小发生变化会调用该方法，完成屏幕适配\r\n    handleResize() {\r\n      this.chartInstance && this.chartInstance.resize();\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    this.chartInstance && this.chartInstance.dispose();\r\n    this.chartInstance = null;\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chartContent {\r\n  /* margin-left: 20px; */\r\n  width: 100%;\r\n  height: 250px;\r\n}\r\n</style>"]}]}